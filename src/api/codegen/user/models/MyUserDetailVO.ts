/* tslint:disable */
/* eslint-disable */
/**
 * service-user
 * 用户服务API接口说明
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MyUserDetailVO
 */
export interface MyUserDetailVO {
    /**
     * 
     * @type {number}
     * @memberof MyUserDetailVO
     */
    uid: number;
    /**
     * 
     * @type {string}
     * @memberof MyUserDetailVO
     */
    username: string;
    /**
     * 
     * @type {string}
     * @memberof MyUserDetailVO
     */
    sign: string;
    /**
     * 
     * @type {number}
     * @memberof MyUserDetailVO
     */
    exp: number;
    /**
     * 
     * @type {string}
     * @memberof MyUserDetailVO
     */
    gender: string;
    /**
     * 
     * @type {Date}
     * @memberof MyUserDetailVO
     */
    birth: Date;
    /**
     * 
     * @type {string}
     * @memberof MyUserDetailVO
     */
    avatarUrl: string;
    /**
     * 
     * @type {string}
     * @memberof MyUserDetailVO
     */
    bannerUrl: string;
    /**
     * 
     * @type {number}
     * @memberof MyUserDetailVO
     */
    fans: number;
    /**
     * 
     * @type {number}
     * @memberof MyUserDetailVO
     */
    subscribes: number;
    /**
     * 
     * @type {number}
     * @memberof MyUserDetailVO
     */
    coins: number;
    /**
     * 
     * @type {number}
     * @memberof MyUserDetailVO
     */
    followers: number;
    /**
     * 
     * @type {boolean}
     * @memberof MyUserDetailVO
     */
    isGotDailyBonus: boolean;
}

/**
 * Check if a given object implements the MyUserDetailVO interface.
 */
export function instanceOfMyUserDetailVO(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "uid" in value;
    isInstance = isInstance && "username" in value;
    isInstance = isInstance && "sign" in value;
    isInstance = isInstance && "exp" in value;
    isInstance = isInstance && "gender" in value;
    isInstance = isInstance && "birth" in value;
    isInstance = isInstance && "avatarUrl" in value;
    isInstance = isInstance && "bannerUrl" in value;
    isInstance = isInstance && "fans" in value;
    isInstance = isInstance && "subscribes" in value;
    isInstance = isInstance && "coins" in value;
    isInstance = isInstance && "followers" in value;
    isInstance = isInstance && "isGotDailyBonus" in value;

    return isInstance;
}

export function MyUserDetailVOFromJSON(json: any): MyUserDetailVO {
    return MyUserDetailVOFromJSONTyped(json, false);
}

export function MyUserDetailVOFromJSONTyped(json: any, ignoreDiscriminator: boolean): MyUserDetailVO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'uid': json['uid'],
        'username': json['username'],
        'sign': json['sign'],
        'exp': json['exp'],
        'gender': json['gender'],
        'birth': (new Date(json['birth'])),
        'avatarUrl': json['avatarUrl'],
        'bannerUrl': json['bannerUrl'],
        'fans': json['fans'],
        'subscribes': json['subscribes'],
        'coins': json['coins'],
        'followers': json['followers'],
        'isGotDailyBonus': json['isGotDailyBonus'],
    };
}

export function MyUserDetailVOToJSON(value?: MyUserDetailVO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'uid': value.uid,
        'username': value.username,
        'sign': value.sign,
        'exp': value.exp,
        'gender': value.gender,
        'birth': (value.birth.toISOString()),
        'avatarUrl': value.avatarUrl,
        'bannerUrl': value.bannerUrl,
        'fans': value.fans,
        'subscribes': value.subscribes,
        'coins': value.coins,
        'followers': value.followers,
        'isGotDailyBonus': value.isGotDailyBonus,
    };
}

