/* tslint:disable */
/* eslint-disable */
/**
 * service-video
 * 视频服务API接口说明
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserUploadedVideoStatisticsVO
 */
export interface UserUploadedVideoStatisticsVO {
    /**
     * 
     * @type {number}
     * @memberof UserUploadedVideoStatisticsVO
     */
    nkid: number;
    /**
     * 
     * @type {string}
     * @memberof UserUploadedVideoStatisticsVO
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof UserUploadedVideoStatisticsVO
     */
    coverUrl: string;
    /**
     * 
     * @type {number}
     * @memberof UserUploadedVideoStatisticsVO
     */
    duration: number;
    /**
     * 
     * @type {number}
     * @memberof UserUploadedVideoStatisticsVO
     */
    shared: number;
    /**
     * 
     * @type {string}
     * @memberof UserUploadedVideoStatisticsVO
     */
    description: string;
    /**
     * 
     * @type {number}
     * @memberof UserUploadedVideoStatisticsVO
     */
    state: number;
    /**
     * 
     * @type {number}
     * @memberof UserUploadedVideoStatisticsVO
     */
    partitionId: number;
    /**
     * 
     * @type {string}
     * @memberof UserUploadedVideoStatisticsVO
     */
    partitionName: string;
    /**
     * 
     * @type {string}
     * @memberof UserUploadedVideoStatisticsVO
     */
    reviewFailedReason: string;
    /**
     * 
     * @type {Date}
     * @memberof UserUploadedVideoStatisticsVO
     */
    createdAt: Date;
}

/**
 * Check if a given object implements the UserUploadedVideoStatisticsVO interface.
 */
export function instanceOfUserUploadedVideoStatisticsVO(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "nkid" in value;
    isInstance = isInstance && "title" in value;
    isInstance = isInstance && "coverUrl" in value;
    isInstance = isInstance && "duration" in value;
    isInstance = isInstance && "shared" in value;
    isInstance = isInstance && "description" in value;
    isInstance = isInstance && "state" in value;
    isInstance = isInstance && "partitionId" in value;
    isInstance = isInstance && "partitionName" in value;
    isInstance = isInstance && "reviewFailedReason" in value;
    isInstance = isInstance && "createdAt" in value;

    return isInstance;
}

export function UserUploadedVideoStatisticsVOFromJSON(json: any): UserUploadedVideoStatisticsVO {
    return UserUploadedVideoStatisticsVOFromJSONTyped(json, false);
}

export function UserUploadedVideoStatisticsVOFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserUploadedVideoStatisticsVO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'nkid': json['nkid'],
        'title': json['title'],
        'coverUrl': json['coverUrl'],
        'duration': json['duration'],
        'shared': json['shared'],
        'description': json['description'],
        'state': json['state'],
        'partitionId': json['partitionId'],
        'partitionName': json['partitionName'],
        'reviewFailedReason': json['reviewFailedReason'],
        'createdAt': (new Date(json['createdAt'])),
    };
}

export function UserUploadedVideoStatisticsVOToJSON(value?: UserUploadedVideoStatisticsVO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'nkid': value.nkid,
        'title': value.title,
        'coverUrl': value.coverUrl,
        'duration': value.duration,
        'shared': value.shared,
        'description': value.description,
        'state': value.state,
        'partitionId': value.partitionId,
        'partitionName': value.partitionName,
        'reviewFailedReason': value.reviewFailedReason,
        'createdAt': (value.createdAt.toISOString()),
    };
}

