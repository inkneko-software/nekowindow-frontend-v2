/* tslint:disable */
/* eslint-disable */
/**
 * service-video
 * 视频服务API接口说明
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { UploadUserVO } from './UploadUserVO';
import {
    UploadUserVOFromJSON,
    UploadUserVOFromJSONTyped,
    UploadUserVOToJSON,
} from './UploadUserVO';
import type { VideoPostResourceVO } from './VideoPostResourceVO';
import {
    VideoPostResourceVOFromJSON,
    VideoPostResourceVOFromJSONTyped,
    VideoPostResourceVOToJSON,
} from './VideoPostResourceVO';

/**
 * 
 * @export
 * @interface VideoPostDetailVO
 */
export interface VideoPostDetailVO {
    /**
     * 
     * @type {number}
     * @memberof VideoPostDetailVO
     */
    nkid: number;
    /**
     * 
     * @type {string}
     * @memberof VideoPostDetailVO
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof VideoPostDetailVO
     */
    description: string;
    /**
     * 
     * @type {string}
     * @memberof VideoPostDetailVO
     */
    coverUrl: string;
    /**
     * 
     * @type {UploadUserVO}
     * @memberof VideoPostDetailVO
     */
    uploader: UploadUserVO;
    /**
     * 
     * @type {Array<VideoPostResourceVO>}
     * @memberof VideoPostDetailVO
     */
    videos: Array<VideoPostResourceVO>;
    /**
     * 
     * @type {Array<string>}
     * @memberof VideoPostDetailVO
     */
    tags: Array<string>;
    /**
     * 
     * @type {Date}
     * @memberof VideoPostDetailVO
     */
    createdAt: Date;
}

/**
 * Check if a given object implements the VideoPostDetailVO interface.
 */
export function instanceOfVideoPostDetailVO(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "nkid" in value;
    isInstance = isInstance && "title" in value;
    isInstance = isInstance && "description" in value;
    isInstance = isInstance && "coverUrl" in value;
    isInstance = isInstance && "uploader" in value;
    isInstance = isInstance && "videos" in value;
    isInstance = isInstance && "tags" in value;
    isInstance = isInstance && "createdAt" in value;

    return isInstance;
}

export function VideoPostDetailVOFromJSON(json: any): VideoPostDetailVO {
    return VideoPostDetailVOFromJSONTyped(json, false);
}

export function VideoPostDetailVOFromJSONTyped(json: any, ignoreDiscriminator: boolean): VideoPostDetailVO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'nkid': json['nkid'],
        'title': json['title'],
        'description': json['description'],
        'coverUrl': json['coverUrl'],
        'uploader': UploadUserVOFromJSON(json['uploader']),
        'videos': ((json['videos'] as Array<any>).map(VideoPostResourceVOFromJSON)),
        'tags': json['tags'],
        'createdAt': (new Date(json['createdAt'])),
    };
}

export function VideoPostDetailVOToJSON(value?: VideoPostDetailVO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'nkid': value.nkid,
        'title': value.title,
        'description': value.description,
        'coverUrl': value.coverUrl,
        'uploader': UploadUserVOToJSON(value.uploader),
        'videos': ((value.videos as Array<any>).map(VideoPostResourceVOToJSON)),
        'tags': value.tags,
        'createdAt': (value.createdAt.toISOString()),
    };
}

