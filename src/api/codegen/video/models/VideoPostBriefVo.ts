/* tslint:disable */
/* eslint-disable */
/**
 * service-video
 * 视频服务API接口说明
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Tag } from './Tag';
import {
    TagFromJSON,
    TagFromJSONTyped,
    TagToJSON,
} from './Tag';
import type { UploadUserVo } from './UploadUserVo';
import {
    UploadUserVoFromJSON,
    UploadUserVoFromJSONTyped,
    UploadUserVoToJSON,
} from './UploadUserVo';
import type { VideoPostResourceVo } from './VideoPostResourceVo';
import {
    VideoPostResourceVoFromJSON,
    VideoPostResourceVoFromJSONTyped,
    VideoPostResourceVoToJSON,
} from './VideoPostResourceVo';

/**
 * 
 * @export
 * @interface VideoPostBriefVo
 */
export interface VideoPostBriefVo {
    /**
     * 
     * @type {string}
     * @memberof VideoPostBriefVo
     */
    title?: string;
    /**
     * 
     * @type {string}
     * @memberof VideoPostBriefVo
     */
    description?: string;
    /**
     * 
     * @type {UploadUserVo}
     * @memberof VideoPostBriefVo
     */
    uploader?: UploadUserVo;
    /**
     * 
     * @type {Array<VideoPostResourceVo>}
     * @memberof VideoPostBriefVo
     */
    videos?: Array<VideoPostResourceVo>;
    /**
     * 
     * @type {Array<Tag>}
     * @memberof VideoPostBriefVo
     */
    tags?: Array<Tag>;
    /**
     * 
     * @type {Date}
     * @memberof VideoPostBriefVo
     */
    createdAt?: Date;
}

/**
 * Check if a given object implements the VideoPostBriefVo interface.
 */
export function instanceOfVideoPostBriefVo(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function VideoPostBriefVoFromJSON(json: any): VideoPostBriefVo {
    return VideoPostBriefVoFromJSONTyped(json, false);
}

export function VideoPostBriefVoFromJSONTyped(json: any, ignoreDiscriminator: boolean): VideoPostBriefVo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'title': !exists(json, 'title') ? undefined : json['title'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'uploader': !exists(json, 'uploader') ? undefined : UploadUserVoFromJSON(json['uploader']),
        'videos': !exists(json, 'videos') ? undefined : ((json['videos'] as Array<any>).map(VideoPostResourceVoFromJSON)),
        'tags': !exists(json, 'tags') ? undefined : ((json['tags'] as Array<any>).map(TagFromJSON)),
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
    };
}

export function VideoPostBriefVoToJSON(value?: VideoPostBriefVo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'title': value.title,
        'description': value.description,
        'uploader': UploadUserVoToJSON(value.uploader),
        'videos': value.videos === undefined ? undefined : ((value.videos as Array<any>).map(VideoPostResourceVoToJSON)),
        'tags': value.tags === undefined ? undefined : ((value.tags as Array<any>).map(TagToJSON)),
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
    };
}

