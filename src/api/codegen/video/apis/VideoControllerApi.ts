/* tslint:disable */
/* eslint-disable */
/**
 * service-video
 * 视频服务API接口说明
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  CreateVideoPostDTO,
  ResponseCreateVideoPostVO,
  ResponseHomeRecommendVO,
  ResponseListPartitionInfo,
  ResponseListString,
  ResponseListVideoPostBriefVO,
  ResponseString,
  ResponseVideoPostBriefVO,
  ResponseVideoPostDetailVO,
} from '../models/index';
import {
    CreateVideoPostDTOFromJSON,
    CreateVideoPostDTOToJSON,
    ResponseCreateVideoPostVOFromJSON,
    ResponseCreateVideoPostVOToJSON,
    ResponseHomeRecommendVOFromJSON,
    ResponseHomeRecommendVOToJSON,
    ResponseListPartitionInfoFromJSON,
    ResponseListPartitionInfoToJSON,
    ResponseListStringFromJSON,
    ResponseListStringToJSON,
    ResponseListVideoPostBriefVOFromJSON,
    ResponseListVideoPostBriefVOToJSON,
    ResponseStringFromJSON,
    ResponseStringToJSON,
    ResponseVideoPostBriefVOFromJSON,
    ResponseVideoPostBriefVOToJSON,
    ResponseVideoPostDetailVOFromJSON,
    ResponseVideoPostDetailVOToJSON,
} from '../models/index';

export interface CreateVideoPostRequest {
    createVideoPostDTO: CreateVideoPostDTO;
}

export interface GetPartitionLatestVideoRequest {
    partitionId: number;
    page?: number;
    size?: number;
}

export interface GetPartitionRecommendTagListRequest {
    partitionId: number;
}

export interface GetVideoPostBriefRequest {
    nkid: number;
}

export interface GetVideoPostDetailRequest {
    nkid: number;
}

/**
 * 
 */
export class VideoControllerApi extends runtime.BaseAPI {

    /**
     * 创建视频投稿
     */
    async createVideoPostRaw(requestParameters: CreateVideoPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ResponseCreateVideoPostVO>> {
        if (requestParameters.createVideoPostDTO === null || requestParameters.createVideoPostDTO === undefined) {
            throw new runtime.RequiredError('createVideoPostDTO','Required parameter requestParameters.createVideoPostDTO was null or undefined when calling createVideoPost.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/v1/video/createVideoPost`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CreateVideoPostDTOToJSON(requestParameters.createVideoPostDTO),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ResponseCreateVideoPostVOFromJSON(jsonValue));
    }

    /**
     * 创建视频投稿
     */
    async createVideoPost(requestParameters: CreateVideoPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ResponseCreateVideoPostVO> {
        const response = await this.createVideoPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * 生成用于封面上传的预签名链接。需要登录。使用返回的链接进行文件上传，请求方法为PUT，body为文件内容。
     * 生成封面上传链接
     */
    async generateCoverUploadUrlRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ResponseString>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/v1/video/generateCoverUploadUrl`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ResponseStringFromJSON(jsonValue));
    }

    /**
     * 生成用于封面上传的预签名链接。需要登录。使用返回的链接进行文件上传，请求方法为PUT，body为文件内容。
     * 生成封面上传链接
     */
    async generateCoverUploadUrl(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ResponseString> {
        const response = await this.generateCoverUploadUrlRaw(initOverrides);
        return await response.value();
    }

    /**
     * 生成用于上传视频文件的预签名链接。需要登录。使用返回的链接进行文件上传，请求方法为PUT，body为文件内容。
     * 生成视频上传链接
     */
    async generateUploadUrlRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ResponseString>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/v1/video/generateUploadUrl`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ResponseStringFromJSON(jsonValue));
    }

    /**
     * 生成用于上传视频文件的预签名链接。需要登录。使用返回的链接进行文件上传，请求方法为PUT，body为文件内容。
     * 生成视频上传链接
     */
    async generateUploadUrl(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ResponseString> {
        const response = await this.generateUploadUrlRaw(initOverrides);
        return await response.value();
    }

    /**
     * 获取首页推荐
     */
    async getHomeRecommendRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ResponseHomeRecommendVO>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/v1/video/getHomePageRecommend`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ResponseHomeRecommendVOFromJSON(jsonValue));
    }

    /**
     * 获取首页推荐
     */
    async getHomeRecommend(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ResponseHomeRecommendVO> {
        const response = await this.getHomeRecommendRaw(initOverrides);
        return await response.value();
    }

    /**
     * 查询指定分区视频，以时间倒序
     */
    async getPartitionLatestVideoRaw(requestParameters: GetPartitionLatestVideoRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ResponseListVideoPostBriefVO>> {
        if (requestParameters.partitionId === null || requestParameters.partitionId === undefined) {
            throw new runtime.RequiredError('partitionId','Required parameter requestParameters.partitionId was null or undefined when calling getPartitionLatestVideo.');
        }

        const queryParameters: any = {};

        if (requestParameters.partitionId !== undefined) {
            queryParameters['partitionId'] = requestParameters.partitionId;
        }

        if (requestParameters.page !== undefined) {
            queryParameters['page'] = requestParameters.page;
        }

        if (requestParameters.size !== undefined) {
            queryParameters['size'] = requestParameters.size;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/v1/video/getPartitionVideos`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ResponseListVideoPostBriefVOFromJSON(jsonValue));
    }

    /**
     * 查询指定分区视频，以时间倒序
     */
    async getPartitionLatestVideo(requestParameters: GetPartitionLatestVideoRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ResponseListVideoPostBriefVO> {
        const response = await this.getPartitionLatestVideoRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * 查询所有的分区
     */
    async getPartitionListRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ResponseListPartitionInfo>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/v1/video/getPartitionList`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ResponseListPartitionInfoFromJSON(jsonValue));
    }

    /**
     * 查询所有的分区
     */
    async getPartitionList(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ResponseListPartitionInfo> {
        const response = await this.getPartitionListRaw(initOverrides);
        return await response.value();
    }

    /**
     * 查询指定分区的推荐标签
     */
    async getPartitionRecommendTagListRaw(requestParameters: GetPartitionRecommendTagListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ResponseListString>> {
        if (requestParameters.partitionId === null || requestParameters.partitionId === undefined) {
            throw new runtime.RequiredError('partitionId','Required parameter requestParameters.partitionId was null or undefined when calling getPartitionRecommendTagList.');
        }

        const queryParameters: any = {};

        if (requestParameters.partitionId !== undefined) {
            queryParameters['partitionId'] = requestParameters.partitionId;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/v1/video/getPartitionRecommendTagList`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ResponseListStringFromJSON(jsonValue));
    }

    /**
     * 查询指定分区的推荐标签
     */
    async getPartitionRecommendTagList(requestParameters: GetPartitionRecommendTagListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ResponseListString> {
        const response = await this.getPartitionRecommendTagListRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * 查询视频信息
     */
    async getVideoPostBriefRaw(requestParameters: GetVideoPostBriefRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ResponseVideoPostBriefVO>> {
        if (requestParameters.nkid === null || requestParameters.nkid === undefined) {
            throw new runtime.RequiredError('nkid','Required parameter requestParameters.nkid was null or undefined when calling getVideoPostBrief.');
        }

        const queryParameters: any = {};

        if (requestParameters.nkid !== undefined) {
            queryParameters['nkid'] = requestParameters.nkid;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/v1/video/getVideoPostBrief`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ResponseVideoPostBriefVOFromJSON(jsonValue));
    }

    /**
     * 查询视频信息
     */
    async getVideoPostBrief(requestParameters: GetVideoPostBriefRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ResponseVideoPostBriefVO> {
        const response = await this.getVideoPostBriefRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * 获取视频详细信息
     */
    async getVideoPostDetailRaw(requestParameters: GetVideoPostDetailRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ResponseVideoPostDetailVO>> {
        if (requestParameters.nkid === null || requestParameters.nkid === undefined) {
            throw new runtime.RequiredError('nkid','Required parameter requestParameters.nkid was null or undefined when calling getVideoPostDetail.');
        }

        const queryParameters: any = {};

        if (requestParameters.nkid !== undefined) {
            queryParameters['nkid'] = requestParameters.nkid;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/v1/video/getVideoPostDetail`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ResponseVideoPostDetailVOFromJSON(jsonValue));
    }

    /**
     * 获取视频详细信息
     */
    async getVideoPostDetail(requestParameters: GetVideoPostDetailRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ResponseVideoPostDetailVO> {
        const response = await this.getVideoPostDetailRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
