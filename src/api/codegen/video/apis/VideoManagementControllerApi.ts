/* tslint:disable */
/* eslint-disable */
/**
 * service-video
 * 视频服务API接口说明
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ResponseListUserUploadedVideoStatisticsVO,
  ResponseObject,
  UpdatePostBriefDTO,
} from '../models/index';
import {
    ResponseListUserUploadedVideoStatisticsVOFromJSON,
    ResponseListUserUploadedVideoStatisticsVOToJSON,
    ResponseObjectFromJSON,
    ResponseObjectToJSON,
    UpdatePostBriefDTOFromJSON,
    UpdatePostBriefDTOToJSON,
} from '../models/index';

export interface GetUploadedVideosRequest {
    page?: number;
    size?: number;
}

export interface UpdateVideoPostRequest {
    updatePostBriefDTO: UpdatePostBriefDTO;
}

/**
 * 
 */
export class VideoManagementControllerApi extends runtime.BaseAPI {

    /**
     * 获取已上传视频列表
     */
    async getUploadedVideosRaw(requestParameters: GetUploadedVideosRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ResponseListUserUploadedVideoStatisticsVO>> {
        const queryParameters: any = {};

        if (requestParameters.page !== undefined) {
            queryParameters['page'] = requestParameters.page;
        }

        if (requestParameters.size !== undefined) {
            queryParameters['size'] = requestParameters.size;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/v1/video/management/getUploadedVideos`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ResponseListUserUploadedVideoStatisticsVOFromJSON(jsonValue));
    }

    /**
     * 获取已上传视频列表
     */
    async getUploadedVideos(requestParameters: GetUploadedVideosRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ResponseListUserUploadedVideoStatisticsVO> {
        const response = await this.getUploadedVideosRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * 更新已上传的视频信息
     */
    async updateVideoPostRaw(requestParameters: UpdateVideoPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ResponseObject>> {
        if (requestParameters.updatePostBriefDTO === null || requestParameters.updatePostBriefDTO === undefined) {
            throw new runtime.RequiredError('updatePostBriefDTO','Required parameter requestParameters.updatePostBriefDTO was null or undefined when calling updateVideoPost.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/v1/video/management/updateVideoPost`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: UpdatePostBriefDTOToJSON(requestParameters.updatePostBriefDTO),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ResponseObjectFromJSON(jsonValue));
    }

    /**
     * 更新已上传的视频信息
     */
    async updateVideoPost(requestParameters: UpdateVideoPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ResponseObject> {
        const response = await this.updateVideoPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
